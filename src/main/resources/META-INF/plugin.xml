<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>me.kongkiat.octoquery</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/best-practices-for-listing.html#plugin-name -->
    <name>OctoQuery</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor url="https://www.kongkiat.me">Kongkiat</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/best-practices-for-listing.html#plugin-description -->
    <description><![CDATA[
        <b>OctoQuery</b> üêô is a lightweight IntelliJ plugin that helps you automatically format SQL queries written inside
        Spring Data JPA <code>@Query</code> annotations.<br><br>

        It intelligently detects inline SQL strings and reformats them with proper line breaks, indentation, and keyword alignment ‚Äî
        making your queries clean, readable, and consistent across your codebase.<br><br>

        ‚ú® <b>Key Features</b><br>
        ‚Ä¢ Formats SQL inside <code>@Query</code>, <code>@NativeQuery</code>, and repository methods<br>
        ‚Ä¢ Supports common SQL dialects (MySQL, PostgreSQL, Oracle, SQL Server, etc.)<br>
        ‚Ä¢ Keeps parameters and placeholders intact<br>
        ‚Ä¢ Automatically preserves your existing code style<br>
        ‚Ä¢ Works seamlessly with Spring Data JPA projects<br><br>

        OctoQuery makes your SQL as beautiful and readable as your code ‚Äî
        because even your queries deserve some love. üêôüíú
    ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.java</depends>
    <depends>com.intellij.database</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <multiHostInjector implementation="me.kongkiat.octoquery.OctoQueryLanguageInjector"/>
    </extensions>

    <actions>
        <action id="me.kongkiat.octoquery.FormatQueryAction"
                class="me.kongkiat.octoquery.FormatQueryAction"
                text="Format JPA Query (OctoQuery)"
                description="Formats and beautifies SQL inside Spring Data JPA @Query annotations using OctoQuery.">
            <keyboard-shortcut keymap="$default" first-keystroke="alt shift F" />
        </action>
    </actions>
</idea-plugin>